:root {
    --background-gradient-start: #FFDAB9; /* Pale Peach */
    --background-gradient-mid1: #E6E6FA; /* Lavender Mist */
    --background-gradient-mid2: #F0FFF0; /* Mint Cream */
    --background-gradient-end: #ADD8E6; /* Powder Blue */
    --circle-gradient-start: #FFA07A; /* Light Salmon (more saturated peach) */
    --circle-gradient-end: #B0E0E6; /* Powder Blue (complementary) */
    --text-color: #5D5C61; /* Soft Charcoal */
    --button-bg-color: #FAF0E6; /* Linen (very light pastel) */
    --button-text-color: #5D5C61; /* Soft Charcoal */
    --bar-bg-color: #FFF5EE; /* SeaShell (subtle, light pastel) */
    --panel-bg-color: #F5F5F5; /* White Smoke (light, clean pastel) */
    --panel-text-color: #5D5C61; /* Soft Charcoal */
    --transition-duration: 0.3s;
    --interactive-transition-duration: 0.15s; /* For hover/active states */
    --button-hover-brightness: 1.05; /* Slightly brighter for light theme buttons */
    --button-active-brightness: 1.10; /* Even brighter for active light theme buttons */
    --focus-indicator-color: #FFB6C1; /* Light Pink (brighter accent) */
    --focus-indicator-shadow-color: rgba(255,182,193,0.3); /* Light Pink with alpha */
    --shadow-color: rgba(0,0,0,0.05); /* Softer shadow */
    --circle-scale-max: 3; /* Default max scale for breathing circle */
    --overlay-bg-color: rgba(255, 218, 185, 0.75); /* Light, translucent pale peach */

    /* Animation Keyframe Pace Variables - default to normal pace (4,1,6,1 = 12s) */
    /* These will be updated by JS when pace changes */
    --inhale-duration: 4s;
    --hold1-duration: 1s;
    --exhale-duration: 6s;
    --hold2-duration: 1s;

    /* Calculated total duration for the animation. JS will also need to set breathingCircle.style.animationDuration */
    --total-animation-duration: calc(var(--inhale-duration) + var(--hold1-duration) + var(--exhale-duration) + var(--hold2-duration));

    /* Keyframe percentages based on the duration variables */
    --inhale-end-percent: calc(var(--inhale-duration) / var(--total-animation-duration) * 100%);
    --hold1-end-percent: calc((var(--inhale-duration) + var(--hold1-duration)) / var(--total-animation-duration) * 100%);
    --exhale-end-percent: calc((var(--inhale-duration) + var(--hold1-duration) + var(--exhale-duration)) / var(--total-animation-duration) * 100%);
}

:root[data-theme='dark'] {
    --background-gradient-start: #483D8B; /* Dusty Indigo (Dark Slate Blue) */
    --background-gradient-mid1: #6A5ACD; /* Heather Purple (Slate Blue) */
    --background-gradient-mid2: #4682B4; /* Muted Plum (Steel Blue) */
    --background-gradient-end: #5F9EA0; /* Stormy Lavender (Cadet Blue) */
    --circle-gradient-start: #7B68EE; /* Medium Slate Blue (more vibrant) */
    --circle-gradient-end: #66CDAA; /* Medium Aquamarine (complementary) */
    --text-color: #F0F8FF; /* Creamy White (Alice Blue) */
    --button-bg-color: #2F4F4F; /* Dark Slate Gray (dark, muted pastel) */
    --button-text-color: #F0F8FF; /* Creamy White (Alice Blue) */
    --bar-bg-color: #3B3B58; /* Darker Muted Indigo */
    --panel-bg-color: #34495E; /* Deep Muted Pastel (Dark Slate Gray-Blue) */
    --panel-text-color: #F0F8FF; /* Creamy White (Alice Blue) */
    --button-hover-brightness: 0.95; /* Slightly darker for dark theme buttons */
    --button-active-brightness: 0.90; /* Even darker for active dark theme buttons */
    --focus-indicator-color: #87CEFA; /* Light Sky Blue (brighter accent) */
    --focus-indicator-shadow-color: rgba(135,206,250,0.3); /* Light Sky Blue with alpha */
    --shadow-color: rgba(240,248,255,0.08); /* Lighter shadow for dark theme (Alice Blue at 8% alpha) */
    --overlay-bg-color: rgba(72, 61, 139, 0.75); /* Dark, translucent dusty indigo */
}

.app-container {
    display: flex;
    flex-direction: column;
    min-height: 100vh; /* Ensure it stretches if body content is short */
    width: 100%;
    margin: 0 auto; /* Default, will be overridden by max-width on desktop */
}

/* Basic reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: 'Nunito', sans-serif;
    line-height: 1.7;
    background: linear-gradient(135deg,
                        var(--background-gradient-start),
                        var(--background-gradient-mid1),
                        var(--background-gradient-end),
                        var(--background-gradient-mid2),
                        var(--background-gradient-start)
                      );
    background-size: 600% 600%;
    animation: animateBackgroundGradient 30s ease infinite;
    color: var(--text-color);
    transition: color var(--transition-duration) ease;
    /* display: flex; flex-direction: column; min-height: 100vh; are now on .app-container */
    /* body just needs to be a full-height background container */
    min-height: 100vh;
    margin: 0;
}

/* .app-container takes over the main layout flex properties */
/* #top-bar, #main-content, #bottom-bar are children of .app-container */

#top-bar {
    height: 5vh; /* Default height */
    background-color: var(--bar-bg-color);
    transition: background-color var(--transition-duration) ease;
    width: 100%;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding-right: 20px;
    gap: 15px;
}

#sound-toggle-button, #theme-toggle-button, #settings-toggle-button {
    padding: 10px 15px;
    font-size: 1em; /* Using em for scalability */
    font-weight: 400; /* Ensuring consistent weight */
    cursor: pointer;
    border: 1px solid var(--text-color);
    border-radius: 5px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    transition: background-color var(--transition-duration) ease,
                color var(--transition-duration) ease,
                border-color var(--transition-duration) ease,
                transform var(--interactive-transition-duration) ease,
                filter var(--interactive-transition-duration) ease;
}

#sound-toggle-button:hover, #theme-toggle-button:hover, #settings-toggle-button:hover,
#play-button:hover, #pause-button:hover, #settings-panel #close-settings-button:hover {
    transform: translateY(-2px);
    filter: brightness(var(--button-hover-brightness));
}

#sound-toggle-button:active, #theme-toggle-button:active, #settings-toggle-button:active,
#play-button:active, #pause-button:active, #settings-panel #close-settings-button:active {
    transform: translateY(0px) scale(0.98);
    filter: brightness(var(--button-active-brightness));
}

#main-content {
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 10%;
}

#breathing-circle {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: linear-gradient(to bottom right, var(--circle-gradient-start), var(--circle-gradient-end));
    transition: background var(--transition-duration) ease;
    animation-name: breathe;
    /* animation-duration is set by JS based on pace (directly or via CSS var) */
    animation-duration: var(--total-animation-duration);
    animation-timing-function: cubic-bezier(0.45, 0, 0.55, 1);
    animation-iteration-count: infinite;
    animation-play-state: paused;
}

#bottom-bar {
    height: 10vh;
    background-color: var(--bar-bg-color);
    transition: background-color var(--transition-duration) ease;
    width: 100%;
    display: flex;
    flex-direction: column; /* Stack items vertically */
    justify-content: center;
    align-items: center;
    gap: 15px;
}

#play-button, #pause-button {
    padding: 12px 20px;
    margin: 0 5px;
    font-size: 1.1em; /* Using em for scalability */
    font-weight: 700; /* Making play/pause more prominent */
    cursor: pointer;
    border: 1px solid var(--text-color);
    border-radius: 5px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    transition: background-color var(--transition-duration) ease, color var(--transition-duration) ease, border-color var(--transition-duration) ease;
}

#instruction-text {
    font-size: 1em; /* Using em for scalability */
    color: var(--text-color);
    opacity: 1;
    transition: color var(--transition-duration) ease, opacity 0.3s ease-in-out;
    width: 100%;
    text-align: center;
    margin-bottom: 15px;
}

.text-fade-out {
    opacity: 0 !important; /* Use important if other opacity transitions conflict */
}

.session-complete-effect {
    animation: sessionCompletePulse 0.8s ease-in-out;
}

@keyframes sessionCompletePulse {
    0% { transform: scale(1); opacity: 1; }
    50% { transform: scale(1.05); opacity: 0.7; color: var(--focus-indicator-color); }
    100% { transform: scale(1); opacity: 1; }
}

.hidden {
    display: none !important; /* Ensure it overrides other display properties if panel uses this */
}

/* Settings Panel Styles */
#settings-panel {
    position: fixed;
    top: 0;
    right: -300px; /* Initially off-screen, ensure width is less than this negative value */
    width: 280px;
    height: 100%;
    background-color: var(--panel-bg-color);
    color: var(--panel-text-color);
    box-shadow: -2px 0 5px rgba(0,0,0,0.1);
    padding: 20px;
    z-index: 100;
    transition: right 0.3s ease-in-out, background-color var(--transition-duration) ease, color var(--transition-duration) ease;
    overflow-y: auto; /* For scrollability if content exceeds height */
    border-left: 1px solid var(--text-color); /* Optional: border for panel */
}

#settings-panel.visible {
    right: 0;
}

#settings-panel h2 {
    color: var(--panel-text-color); /* Ensure heading uses panel text color */
    margin-top: 0;
    margin-bottom: 25px;
    text-align: center;
    font-size: 1.6em; /* Slightly larger heading */
    font-weight: 700;
}

#settings-panel fieldset {
    border: 1px solid var(--panel-text-color);
    padding: 15px 20px;
    margin-bottom: 25px;
    border-radius: 5px;
}

#settings-panel legend {
    color: var(--panel-text-color);
    padding: 0 10px;
    font-weight: 700; /* Explicitly bold */
    font-size: 1.2em; /* Slightly larger legend */
}

#settings-panel label {
    color: var(--panel-text-color);
    /* line-height: 1.8; */ /* Body line-height should cover this */
    display: inline-block; /* For better click area */
    margin-left: 8px; /* Space after radio button */
    vertical-align: middle;
    font-size: 0.95em;
    transition: color var(--interactive-transition-duration) ease, text-decoration var(--interactive-transition-duration) ease;
}

#settings-panel label:hover {
    color: var(--focus-indicator-color);
    /* text-decoration: underline; */ /* Decided against underline for cleaner look */
    cursor: pointer;
}

#settings-panel input[type="radio"] {
    margin-right: 2px; /* Reduced to balance with label margin-left */
    vertical-align: middle;
    cursor: pointer;
}

#settings-panel input[type="radio"]:hover + label {
    color: var(--focus-indicator-color);
}


#settings-panel #session-duration {
    width: 100%;
    padding: 8px 10px;
    margin-top: 5px; /* Space above select if needed */
    border: 1px solid var(--panel-text-color);
    border-radius: 4px;
    background-color: var(--button-bg-color); /* Consistent with button backgrounds */
    color: var(--panel-text-color);
    font-family: inherit; /* Ensure it uses Nunito */
    font-size: 0.95em;
    cursor: pointer;
    transition: border-color var(--interactive-transition-duration) ease,
                background-color var(--interactive-transition-duration) ease,
                box-shadow var(--interactive-transition-duration) ease;
}

#settings-panel #session-duration:hover {
    border-color: var(--focus-indicator-color);
    filter: brightness(var(--button-hover-brightness));
}

#settings-panel #session-duration:focus {
    outline: none; /* Remove default outline */
    border-color: var(--focus-indicator-color);
    box-shadow: 0 0 0 2px var(--focus-indicator-shadow-color); /* Custom focus ring */
}


#settings-panel #close-settings-button {
    padding: 10px 20px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    border: 1px solid var(--text-color);
    border-radius: 5px;
    cursor: pointer;
    /* transition is inherited from the general button style at the top */
    display: block;
    width: 100%;
    margin-top: 25px; /* Space above close button */
    font-size: 1.05em; /* Slightly larger close button text */
    font-weight: 400;
}


@keyframes animateBackgroundGradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

@keyframes breathe {
    0% { transform: scale(1); opacity: 0.8; }
    var(--inhale-end-percent) { transform: scale(var(--circle-scale-max)); opacity: 1; }
    var(--hold1-end-percent) { transform: scale(var(--circle-scale-max)); opacity: 1; }
    var(--exhale-end-percent) { transform: scale(1); opacity: 0.8; }
    100% { transform: scale(1); opacity: 0.8; }
}

/* Enhanced Focus Indicator Styles */
*:focus-visible {
  outline: 2px solid var(--focus-indicator-color);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px var(--focus-indicator-shadow-color);
}

/* Ensure buttons and inputs don't have outline removed by other styles,
   or that this focus style is specific enough to override.
   The existing button styles don't remove outline, so this should apply. */

/* Media Queries for Responsive Design */

/* Mobile (320px - 767px, changed from 768 to avoid overlap with tablet) */
@media screen and (max-width: 767px) {
    :root {
        --circle-scale-max: 2.5; /* Reduce max circle scale */
    }

    #main-content {
        padding: 10% 5%; /* Reduced padding */
    }

    #top-bar {
        height: auto; /* Allow height to adjust to content for mobile */
        min-height: 8vh; /* Ensure it's tall enough for touch targets */
        padding-top: 10px;
        padding-bottom: 10px;
        flex-wrap: wrap; /* Allow buttons to wrap if needed */
        justify-content: center; /* Center buttons if they wrap */
    }

    #top-bar button, #bottom-bar button, #settings-panel #close-settings-button {
        /* Padding is now 10px 15px for top-bar, play/pause 12px 20px, close 12px 20px */
        /* Keeping mobile specific padding for larger touch targets if different from desktop */
        padding: 12px 18px; /* Unified larger touch targets for mobile */
        font-size: 1em; /* Ensure readable font size */
    }

    #bottom-bar {
        height: auto; /* Adjust height to content */
        padding-top: 10px; /* Reduced from 15px general gap */
        padding-bottom: 10px; /* Reduced from 15px general gap */
        gap: 12px; /* Slightly reduced gap for mobile bottom bar */
    }

    #instruction-text {
        font-size: 0.95em; /* Adjust instruction text size */
        margin-bottom: 10px;
    }

    #settings-panel {
        width: 90vw; /* Wider panel */
        right: -100vw; /* Adjust for vw */
        max-width: 300px; /* Max width for very wide small screens if 90vw is too much */
    }
    #settings-panel.visible {
        right: 0;
    }
     #settings-panel h2 {
        font-size: 1.3em;
    }
    #settings-panel legend {
        font-size: 1em;
    }
    #settings-panel label {
        font-size: 0.9em;
        /* line-height: 1.6; */ /* Body line-height will handle this */
    }
}

/* Tablet (768px - 1024px) */
@media screen and (min-width: 768px) and (max-width: 1024px) {
    #main-content {
        padding: 12%; /* Slightly adjust padding if needed */
    }

    #settings-panel {
        width: 320px;
        right: -350px; /* Ensure this is more than width */
    }
     #settings-panel.visible {
        right: 0;
    }
}

/* Desktop (1025px+) */
@media screen and (min-width: 1025px) {
    .app-container {
        max-width: 1200px;
        margin: 0 auto; /* Centers the container */
        box-shadow: 0 0 20px var(--shadow-color); /* Optional: give it some depth */
        /* border-left: 1px solid var(--bar-bg-color); /* Optional subtle border */
        /* border-right: 1px solid var(--bar-bg-color); */
    }

    /* #top-bar height is already 5vh by default, no need to reset here unless mobile changed it differently */
}

@media (prefers-reduced-motion: reduce) {
  /* Disable breathing circle animation */
  #breathing-circle {
    animation-name: none !important;
  }

  /* Disable background gradient animation */
  body {
    animation-name: none !important;
    /* Ensure a static, pleasant gradient is still shown */
    /* The variables will provide the current theme's gradient, just stop animation */
    /* background-size: 100% 100%; /* Reset from animated size if needed, but current gradient definition might be fine */
  }

  /* Disable/reduce most transition effects */
  body, .app-container, #breathing-circle, button, #top-bar, #bottom-bar, #settings-panel,
  #sound-toggle-button, #theme-toggle-button, #settings-toggle-button,
  #play-button, #pause-button, #close-settings-button, #instruction-text {
    transition-duration: 0.001s !important; /* Effectively disable transitions */
    transition-delay: 0s !important;
  }

  /* Ensure settings panel slide-in is also disabled if it has its own transition not covered above */
  #settings-panel {
    transition: none !important; /* More specific for panel if needed */
  }

  /* Disable session complete pulse animation on instruction text */
  #instruction-text.session-complete-effect {
    animation-name: none !important;
  }
}

/* Session End Fade Overlay */
#fade-overlay {
  position: fixed;
  top: 0; left: 0; width: 100%; height: 100%;
  background-color: var(--overlay-bg-color);
  opacity: 0;
  z-index: 150; /* Above most elements, below modals if any were higher */
  pointer-events: none; /* Allow clicks through when invisible */
  transition: opacity 1.5s ease-in-out;
}

#fade-overlay.visible {
  opacity: 0.95; /* Almost fully opaque */
  pointer-events: auto; /* Block interaction when visible */
}

/* Controls Fade During Active Session */
#top-bar, #bottom-bar {
    /* Ensure existing transitions don't conflict - background-color is already transitioned */
    transition: opacity 0.5s ease-in-out, background-color var(--transition-duration) ease;
}

#top-bar.controls-hidden, #bottom-bar.controls-hidden {
    opacity: 0.1;
    pointer-events: none; /* Prevent interaction when faded */
}

/* Allow hover to re-show controls if they are hidden */
/* This needs to be specific enough if pointer-events: none is on the class */
#top-bar.controls-hidden:hover, #bottom-bar.controls-hidden:hover {
    opacity: 1;
    pointer-events: auto; /* Allow interaction when hovered */
}
