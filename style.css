:root {
    --background-gradient-start: rgba(255,182,193,0.3);
    --background-gradient-mid1: rgba(200,200,240,0.3); /* Light theme intermediate 1 */
    --background-gradient-mid2: rgba(173,230,200,0.3); /* Light theme intermediate 2 */
    --background-gradient-end: rgba(173,216,230,0.3);
    --circle-gradient-start: rgba(255,182,193,0.8);
    --circle-gradient-end: rgba(173,216,230,0.8);
    --text-color: #333333;
    --button-bg-color: #f0f0f0;
    --button-text-color: #333333;
    --bar-bg-color: #e0e0e0; /* Specific for top/bottom bars */
    --panel-bg-color: #f8f8f8; /* Settings panel background for light theme */
    --panel-text-color: #333333; /* Settings panel text for light theme */
    --transition-duration: 0.3s;
    --focus-indicator-color: #007bff;
    --focus-indicator-shadow-color: rgba(0,123,255,0.25);
    --shadow-color: rgba(0,0,0,0.1); /* For app container shadow */
    --circle-scale-max: 3; /* Default max scale for breathing circle */
    --overlay-bg-color: #FFFFFF; /* For session end fade overlay */

    /* Animation Keyframe Pace Variables - default to normal pace (4,1,6,1 = 12s) */
    /* These will be updated by JS when pace changes */
    --inhale-duration: 4s;
    --hold1-duration: 1s;
    --exhale-duration: 6s;
    --hold2-duration: 1s;

    /* Calculated total duration for the animation. JS will also need to set breathingCircle.style.animationDuration */
    --total-animation-duration: calc(var(--inhale-duration) + var(--hold1-duration) + var(--exhale-duration) + var(--hold2-duration));

    /* Keyframe percentages based on the duration variables */
    --inhale-end-percent: calc(var(--inhale-duration) / var(--total-animation-duration) * 100%);
    --hold1-end-percent: calc((var(--inhale-duration) + var(--hold1-duration)) / var(--total-animation-duration) * 100%);
    --exhale-end-percent: calc((var(--inhale-duration) + var(--hold1-duration) + var(--exhale-duration)) / var(--total-animation-duration) * 100%);
}

:root[data-theme='dark'] {
    --background-gradient-start: rgba(25,25,112,0.8);
    --background-gradient-mid1: rgba(50,40,120,0.8); /* Dark theme intermediate 1 */
    --background-gradient-mid2: rgba(30,60,100,0.8); /* Dark theme intermediate 2 */
    --background-gradient-end: rgba(72,61,139,0.8);
    --circle-gradient-start: rgba(25,25,112,1);
    --circle-gradient-end: rgba(72,61,139,1);
    --text-color: #e0e0e0;
    --button-bg-color: #444444;
    --button-text-color: #e0e0e0;
    --bar-bg-color: #333333; /* Darker for bars in dark theme */
    --panel-bg-color: #3a3a3a; /* Settings panel background for dark theme */
    --panel-text-color: #e0e0e0; /* Settings panel text for dark theme */
    --focus-indicator-color: #58a6ff;
    --focus-indicator-shadow-color: rgba(88,166,255,0.3);
    --shadow-color: rgba(255,255,255,0.1); /* Lighter shadow for dark theme */
    --overlay-bg-color: #191970; /* Midnight blue for dark theme overlay */
}

.app-container {
    display: flex;
    flex-direction: column;
    min-height: 100vh; /* Ensure it stretches if body content is short */
    width: 100%;
    margin: 0 auto; /* Default, will be overridden by max-width on desktop */
}

/* Basic reset */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body {
    font-family: sans-serif;
    background: linear-gradient(135deg,
                        var(--background-gradient-start),
                        var(--background-gradient-mid1),
                        var(--background-gradient-end),
                        var(--background-gradient-mid2),
                        var(--background-gradient-start)
                      );
    background-size: 400% 400%;
    animation: animateBackgroundGradient 20s ease infinite;
    color: var(--text-color);
    transition: color var(--transition-duration) ease;
    /* display: flex; flex-direction: column; min-height: 100vh; are now on .app-container */
    /* body just needs to be a full-height background container */
    min-height: 100vh;
    margin: 0;
}

/* .app-container takes over the main layout flex properties */
/* #top-bar, #main-content, #bottom-bar are children of .app-container */

#top-bar {
    height: 5vh; /* Default height */
    background-color: var(--bar-bg-color);
    transition: background-color var(--transition-duration) ease;
    width: 100%;
    display: flex;
    justify-content: flex-end;
    align-items: center;
    padding-right: 20px;
    gap: 10px;
}

#sound-toggle-button, #theme-toggle-button, #settings-toggle-button {
    padding: 8px 12px; /* Adjusted for gear icon potentially */
    font-size: 16px; /* Gear icon might need to be larger */
    cursor: pointer;
    border: 1px solid var(--text-color);
    border-radius: 5px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    transition: background-color var(--transition-duration) ease, color var(--transition-duration) ease, border-color var(--transition-duration) ease;
}

#main-content {
    flex-grow: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 15%;
}

#breathing-circle {
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: linear-gradient(to bottom right, var(--circle-gradient-start), var(--circle-gradient-end));
    transition: background var(--transition-duration) ease;
    animation-name: breathe;
    /* animation-duration is set by JS based on pace (directly or via CSS var) */
    animation-duration: var(--total-animation-duration);
    animation-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    animation-iteration-count: infinite;
    animation-play-state: paused;
}

#bottom-bar {
    height: 10vh;
    background-color: var(--bar-bg-color);
    transition: background-color var(--transition-duration) ease;
    width: 100%;
    display: flex;
    flex-direction: column; /* Stack items vertically */
    justify-content: center;
    align-items: center;
    gap: 10px;
}

#play-button, #pause-button {
    padding: 10px 20px;
    margin: 0 5px;
    font-size: 16px;
    cursor: pointer;
    border: 1px solid var(--text-color);
    border-radius: 5px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    transition: background-color var(--transition-duration) ease, color var(--transition-duration) ease, border-color var(--transition-duration) ease;
}

#instruction-text {
    font-size: 14px;
    color: var(--text-color);
    transition: color var(--transition-duration) ease;
    width: 100%;
    text-align: center;
    margin-bottom: 10px; /* Or adjust gap in #bottom-bar */
}

.hidden {
    display: none !important; /* Ensure it overrides other display properties if panel uses this */
}

/* Settings Panel Styles */
#settings-panel {
    position: fixed;
    top: 0;
    right: -300px; /* Initially off-screen, ensure width is less than this negative value */
    width: 280px;
    height: 100%;
    background-color: var(--panel-bg-color);
    color: var(--panel-text-color);
    box-shadow: -2px 0 5px rgba(0,0,0,0.1);
    padding: 20px;
    z-index: 100;
    transition: right 0.3s ease-in-out, background-color var(--transition-duration) ease, color var(--transition-duration) ease;
    overflow-y: auto; /* For scrollability if content exceeds height */
    border-left: 1px solid var(--text-color); /* Optional: border for panel */
}

#settings-panel.visible {
    right: 0;
}

#settings-panel h2 {
    color: var(--panel-text-color); /* Ensure heading uses panel text color */
    margin-top: 0;
    margin-bottom: 20px;
    text-align: center;
    font-size: 1.5em;
}

#settings-panel fieldset {
    border: 1px solid var(--panel-text-color);
    padding: 10px 15px 15px 15px; /* Top, H, Bottom, H */
    margin-bottom: 20px;
    border-radius: 5px;
}

#settings-panel legend {
    color: var(--panel-text-color);
    padding: 0 10px;
    font-weight: bold;
    font-size: 1.1em;
}

#settings-panel label {
    color: var(--panel-text-color);
    line-height: 1.8;
    display: inline-block; /* For better click area */
    margin-left: 5px; /* Space after radio button */
    vertical-align: middle;
}

#settings-panel input[type="radio"] {
    margin-right: 5px;
    vertical-align: middle;
}

#settings-panel #close-settings-button {
    padding: 10px 20px;
    background-color: var(--button-bg-color);
    color: var(--button-text-color);
    border: 1px solid var(--text-color);
    border-radius: 5px;
    cursor: pointer;
    transition: background-color var(--transition-duration) ease, color var(--transition-duration) ease, border-color var(--transition-duration) ease;
    display: block;
    width: 100%;
    margin-top: 20px; /* Space above close button */
    font-size: 1em;
}


@keyframes animateBackgroundGradient {
    0% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
    100% { background-position: 0% 50%; }
}

@keyframes breathe {
    0% { transform: scale(1); }
    var(--inhale-end-percent) { transform: scale(var(--circle-scale-max)); }
    var(--hold1-end-percent) { transform: scale(var(--circle-scale-max)); }
    var(--exhale-end-percent) { transform: scale(1); }
    100% { transform: scale(1); }
}

/* Enhanced Focus Indicator Styles */
*:focus-visible {
  outline: 2px solid var(--focus-indicator-color);
  outline-offset: 2px;
  box-shadow: 0 0 0 4px var(--focus-indicator-shadow-color);
}

/* Ensure buttons and inputs don't have outline removed by other styles,
   or that this focus style is specific enough to override.
   The existing button styles don't remove outline, so this should apply. */

/* Media Queries for Responsive Design */

/* Mobile (320px - 767px, changed from 768 to avoid overlap with tablet) */
@media screen and (max-width: 767px) {
    :root {
        --circle-scale-max: 2.5; /* Reduce max circle scale */
    }

    #main-content {
        padding: 10% 5%; /* Reduced padding */
    }

    #top-bar {
        height: auto; /* Allow height to adjust to content for mobile */
        min-height: 8vh; /* Ensure it's tall enough for touch targets */
        padding-top: 10px;
        padding-bottom: 10px;
        flex-wrap: wrap; /* Allow buttons to wrap if needed */
        justify-content: center; /* Center buttons if they wrap */
    }

    #top-bar button, #bottom-bar button, #settings-panel #close-settings-button {
        padding: 12px 15px; /* Larger touch targets */
        font-size: 1em; /* Ensure readable font size */
    }

    #bottom-bar {
        height: auto; /* Adjust height to content */
        padding-top: 10px;
        padding-bottom: 10px;
    }

    #instruction-text {
        font-size: 0.9em; /* Adjust instruction text size */
        margin-bottom: 5px; /* Reduce margin if buttons are larger */
    }

    #settings-panel {
        width: 90vw; /* Wider panel */
        right: -100vw; /* Adjust for vw */
        max-width: 300px; /* Max width for very wide small screens if 90vw is too much */
    }
    #settings-panel.visible {
        right: 0;
    }
     #settings-panel h2 {
        font-size: 1.3em;
    }
    #settings-panel legend {
        font-size: 1em;
    }
    #settings-panel label {
        font-size: 0.9em;
        line-height: 1.6;
    }
}

/* Tablet (768px - 1024px) */
@media screen and (min-width: 768px) and (max-width: 1024px) {
    #main-content {
        padding: 12%; /* Slightly adjust padding if needed */
    }

    #settings-panel {
        width: 320px;
        right: -350px; /* Ensure this is more than width */
    }
     #settings-panel.visible {
        right: 0;
    }
}

/* Desktop (1025px+) */
@media screen and (min-width: 1025px) {
    .app-container {
        max-width: 1200px;
        margin: 0 auto; /* Centers the container */
        box-shadow: 0 0 20px var(--shadow-color); /* Optional: give it some depth */
        /* border-left: 1px solid var(--bar-bg-color); /* Optional subtle border */
        /* border-right: 1px solid var(--bar-bg-color); */
    }

    /* #top-bar height is already 5vh by default, no need to reset here unless mobile changed it differently */
}

@media (prefers-reduced-motion: reduce) {
  /* Disable breathing circle animation */
  #breathing-circle {
    animation-name: none !important;
  }

  /* Disable background gradient animation */
  body {
    animation-name: none !important;
    /* Ensure a static, pleasant gradient is still shown */
    /* The variables will provide the current theme's gradient, just stop animation */
    /* background-size: 100% 100%; /* Reset from animated size if needed, but current gradient definition might be fine */
  }

  /* Disable/reduce most transition effects */
  body, .app-container, #breathing-circle, button, #top-bar, #bottom-bar, #settings-panel,
  #sound-toggle-button, #theme-toggle-button, #settings-toggle-button,
  #play-button, #pause-button, #close-settings-button, #instruction-text {
    transition-duration: 0.001s !important; /* Effectively disable transitions */
    transition-delay: 0s !important;
  }

  /* Ensure settings panel slide-in is also disabled if it has its own transition not covered above */
  #settings-panel {
    transition: none !important; /* More specific for panel if needed */
  }
}

/* Session End Fade Overlay */
#fade-overlay {
  position: fixed;
  top: 0; left: 0; width: 100%; height: 100%;
  background-color: var(--overlay-bg-color);
  opacity: 0;
  z-index: 150; /* Above most elements, below modals if any were higher */
  pointer-events: none; /* Allow clicks through when invisible */
  transition: opacity 1.5s ease-in-out;
}

#fade-overlay.visible {
  opacity: 0.95; /* Almost fully opaque */
  pointer-events: auto; /* Block interaction when visible */
}

/* Controls Fade During Active Session */
#top-bar, #bottom-bar {
    /* Ensure existing transitions don't conflict - background-color is already transitioned */
    transition: opacity 0.5s ease-in-out, background-color var(--transition-duration) ease;
}

#top-bar.controls-hidden, #bottom-bar.controls-hidden {
    opacity: 0.1;
    pointer-events: none; /* Prevent interaction when faded */
}

/* Allow hover to re-show controls if they are hidden */
/* This needs to be specific enough if pointer-events: none is on the class */
#top-bar.controls-hidden:hover, #bottom-bar.controls-hidden:hover {
    opacity: 1;
    pointer-events: auto; /* Allow interaction when hovered */
}
